name: lint-test-build-upload
on:
  push
env:
  version: "0.3.1"
jobs:
  manylinux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python:
          - {version: "3.7", version-abi: "cp37", version-abi-suffix: "cp37m"}
          - {version: "3.8", version-abi: "cp38", version-abi-suffix: "cp38"}
          - {version: "3.9", version-abi: "cp39", version-abi-suffix: "cp39"}
          - {version: "3.10", version-abi: "cp310", version-abi-suffix: "cp310"}
    name: "Python ${{ matrix.python.version }} with ABI ${{ matrix.python.version-abi }} for manylinux2014_x86_64"
    steps:
      - uses: actions/checkout@v2
      - name: Install development dependencies.
        run: |
          yum -y install wget libffi-devel
      - name: Download libsodium source tree archive.
        run: |
          wget https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          mv libsodium-1.0.18.tar.gz src/rbcl/libsodium.tar.gz
      - name: Install Python.
        run: |
          /opt/python/${{ matrix.python.version-abi }}-${{ matrix.python.version-abi-suffix }}/bin/python -m pip install virtualenv
          /opt/python/${{ matrix.python.version-abi }}-${{ matrix.python.version-abi-suffix }}/bin/python -m virtualenv .venv
      - name: Install Python dependencies for build process.
        run: .venv/bin/pip install -U pip .[build]
      - name: Build wheel file.
        run: |
          mkdir tmpwheelhouse
          PY_LIMITED_API="--py-limited-api=${{ matrix.python.version-abi }}"
          LIBSODIUM_MAKE_ARGS="-j$(nproc)" .venv/bin/python setup.py bdist_wheel $PY_LIMITED_API
          cp build/lib*/rbcl/_sodium*.so src/rbcl
          mv dist/rbcl*.whl tmpwheelhouse
          auditwheel repair tmpwheelhouse/rbcl*.whl -w wheelhouse/
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          .venv/bin/pip install -U .[lint,test]
          .venv/bin/python -m pylint rbcl # Check against linting rules.
          .venv/bin/python src/rbcl/rbcl.py -v # Run doctests.
          .venv/bin/python -m pytest # Run tests.
      - name: Publish coverage results.
        run: |
          .venv/bin/pip install -U .[coveralls]
          .venv/bin/python -m coveralls --service=github # Submit to coveralls.
        if: matrix.python.version == '3.8'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test auto-generation of documentation.
        run: |
          .venv/bin/pip install -U .[docs]
          cd docs && ../.venv/bin/sphinx-apidoc -f -E --templatedir=_templates -o _source .. ../setup.py ../src/rbcl/sodium_ffi.py && cd ..
      - name: Upload wheel file.
        run: |
           mkdir rbcl-wheelhouse
           mv wheelhouse/rbcl*.whl rbcl-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "rbcl-${{ env.version }}-${{ matrix.python.version-abi }}-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64"
          path: rbcl-wheelhouse/
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python:
          - version: '3.7'
            version-abi: 'cp37'
            version-macos: '10.9'
            url: 'https://www.python.org/ftp/python/3.7.9/python-3.7.9-macosx10.9.pkg'
            bin-path: '/Library/Frameworks/Python.framework/Versions/3.7/bin/python3'
          - version: '3.8'
            version-abi: 'cp38'
            version-macos: '10.9'
            url: 'https://www.python.org/ftp/python/3.8.9/python-3.8.9-macosx10.9.pkg'
            bin-path: '/Library/Frameworks/Python.framework/Versions/3.8/bin/python3'
          - version: '3.9'
            version-abi: 'cp39'
            version-macos: '10.9'
            url: 'https://www.python.org/ftp/python/3.9.9/python-3.9.9-macosx10.9.pkg'
            bin-path: '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3'
    name: "Python ${{ matrix.python.version }} with ABI ${{ matrix.python.version-abi }} for macOS ${{ matrix.python.version-macos }}"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          curl "${{ matrix.python.url }}" -o python.pkg
          sudo installer -pkg python.pkg -target /
          ${{ matrix.python.bin-path }} -m pip install -U virtualenv
          ${{ matrix.python.bin-path }} -m virtualenv venv
      - name: Install Python dependencies for build process.
        run: |
          wget -O src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U pip .[build]
      - name: Build wheel file.
        run: |
          wget -O src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          mkdir wheelhouse
          REGEX="3\.([0-9])*"
          PY_LIMITED_API="--py-limited-api=${{ matrix.python.version-abi }}"
          rm -f dist/*.*
          LIBSODIUM_MAKE_ARGS="-j$(sysctl -n hw.ncpu)" CFLAGS="-mmacosx-version-min=10.9 -march=core2" \
              venv/bin/python setup.py bdist_wheel $PY_LIMITED_API && mv dist/rbcl*.whl wheelhouse
          cp build/lib*/rbcl/_sodium*.so src/rbcl
      - name: Test wheel installation.
        run: venv/bin/pip install -f wheelhouse --no-index rbcl
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U pip .[lint,test]
          venv/bin/python -m pylint rbcl # Check against linting rules.
          venv/bin/python src/rbcl/rbcl.py -v # Run doctests.
          venv/bin/python -m pytest # Run tests.
      - name: Test auto-generation of documentation.
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U .[docs]
          cd docs && ../venv/bin/sphinx-apidoc -f -E --templatedir=_templates -o _source .. ../setup.py ../src/rbcl/sodium_ffi.py && cd ..
      - name: Upload wheel file.
        run: |
          mkdir rbcl-wheelhouse
          mv wheelhouse/rbcl*.whl rbcl-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "rbcl-${{ env.version }}-${{ matrix.python.version-abi }}-abi3-macosx_10_9_x86_64"
          path: rbcl-wheelhouse/
  macos-arm:
    runs-on: macos-11
    strategy:
      matrix:
        python:
          - version: '3.9'
            version-abi: 'cp39'
            version-macos: '11'
            url: 'https://www.python.org/ftp/python/3.9.9/python-3.9.9-macos11.pkg'
            bin-path: '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3'
          - version: '3.10'
            version-abi: 'cp310'
            version-macos: '11'
            url: 'https://www.python.org/ftp/python/3.10.6/python-3.10.6-macos11.pkg'
            bin-path: '/Library/Frameworks/Python.framework/Versions/3.10/bin/python3'
    name: "Python ${{ matrix.python.version }} with ABI ${{ matrix.python.version-abi }} for macOS ${{ matrix.python.version-macos }} ARM"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          curl "${{ matrix.python.url }}" -o python.pkg
          sudo installer -pkg python.pkg -target /
          ${{ matrix.python.bin-path }} -m pip install -U virtualenv
          ${{ matrix.python.bin-path }} -m virtualenv venv
      - name: Install Python dependencies for build process.
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U pip .[build]
      - name: Build wheel file.
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          mkdir wheelhouse
          PY_LIMITED_API="--py-limited-api=${{ matrix.python.version-abi }}"
          rm -f dist/*.*
          LIBSODIUM_MAKE_ARGS="-j$(sysctl -n hw.ncpu)" MACOSX_DEPLOYMENT_TARGET="10.10" CFLAGS="-arch arm64 -arch x86_64" ARCHFLAGS="-arch arm64 -arch x86_64" _PYTHON_HOST_PLATFORM="macosx-10.9-universal2" \
              venv/bin/python setup.py bdist_wheel $PY_LIMITED_API && mv dist/rbcl*.whl wheelhouse
          cp build/lib*/rbcl/_sodium*.so src/rbcl
      - name: Test wheel installation.
        run: venv/bin/pip install -f wheelhouse --no-index rbcl
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U pip .[lint,test]
          venv/bin/python -m pylint rbcl # Check against linting rules.
          venv/bin/python src/rbcl/rbcl.py -v # Run doctests.
          venv/bin/python -m pytest # Run tests.
          #venv/bin/python -m nose --cover-erase # Test using nose.  # RbCl 0.2.0 has succeeded before but but errored at end [due to nose in 3.10 bug](https://github.com/nose-devs/nose/issues/1099)
      - name: Test auto-generation of documentation.
        run: |
          wget -O ./src/rbcl/libsodium.tar.gz https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
          venv/bin/pip install -U .[docs]
          cd docs && ../venv/bin/sphinx-apidoc -f -E --templatedir=_templates -o _source .. ../setup.py ../src/rbcl/sodium_ffi.py && cd ..
      - name: Upload wheel file.
        run: |
          mkdir rbcl-wheelhouse
          mv wheelhouse/rbcl*.whl rbcl-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "rbcl-${{ env.version }}-${{ matrix.python.version-abi }}-abi3-macosx_10_10_universal2"
          path: rbcl-wheelhouse/
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        windows:
          - {version: 'win32', arch: 'x86', arch-sodium: 'Win32', arch-vs: 'x86'}
          - {version: 'win_amd64', arch: 'x64', arch-sodium: 'x64', arch-vs: 'amd64'}
        python:
          - {version: "3.7", version-abi: "cp37"}
          - {version: "3.8", version-abi: "cp38"}
          - {version: "3.9", version-abi: "cp39"}
          - {version: "3.10", version-abi: "cp310"}
    name: "Python ${{ matrix.python.version }} with ABI ${{ matrix.python.version-abi }} for Windows ${{ matrix.windows.arch }}"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python.version }}
          architecture: ${{ matrix.windows.arch }}
      - name: Install Python dependencies for build process.
        run: python -m pip install -U pip .[build]
        shell: bash
      - name: Download and extract libsodium dynamic library file.
        run: |
          wget -O c:\libsodium-1.0.18-msvc.zip https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18-msvc.zip
          Expand-Archive c:\libsodium-1.0.18-msvc.zip -DestinationPath c:\
        shell: powershell
      - name: Add environment variables for libsodium.
        run: |
          echo "INCLUDE=C:/libsodium/include;$INCLUDE" >> $GITHUB_ENV
          echo "LIB=C:/libsodium/${{ matrix.windows.arch-sodium }}/release/v142/static;$LIB" >> $GITHUB_ENV
        shell: bash
      - name: Build wheel file.
        run: |
          mkdir wheelhouse
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -no_logo -arch=${{ matrix.windows.arch-vs }}
          python setup.py bdist_wheel --py-limited-api=${{ matrix.python.version-abi }}
          cp build/lib*/rbcl/_sodium.pyd src/rbcl
          mv dist/rbcl*.whl wheelhouse
        shell: cmd
      - name: Test wheel installation.
        run: pip install -f wheelhouse rbcl --no-index
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          python -m pip install -U pip .[lint,test]
          python -m pylint rbcl # Check against linting rules.
          python src/rbcl/rbcl.py -v # Run doctests.
          python -m pytest # Run tests.
      - name: Upload wheel file.
        run: |
          mkdir rbcl-wheelhouse
          move wheelhouse\rbcl*.whl rbcl-wheelhouse\
      - uses: actions/upload-artifact@v1
        with:
          name: "rbcl-${{ env.version }}-${{ matrix.python.version-abi }}-abi3-${{ matrix.windows.version }}"
          path: rbcl-wheelhouse\
